name: release

on:
  push:
    tags:
    - 'v*'

jobs:
  stable-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # need tags to calculate version
    - uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    # Build and run tests
    # TODO: cross-compile for arm platforms, probably in makefile
    - run: |-
        echo "##[set-output name=version;]$(git tag -l | sort --version-sort -r | head -1 | sed 's/^v//')"
        echo "##[set-output name=now;]$(date +%s)"
        echo "##[set-output name=commit;]$(git rev-parse --short HEAD)"
      id: getver
    - run: |
        go get -v -t -d ./...
    - run: go test -v ./...
    - run: go build -a -v -ldflags="-extldflags=-static -X github.com/wiregarden-io/wiregarden/cli.version=${{steps.getver.outputs.version}}+${{steps.getver.outputs.now}}-${{steps.getver.outputs.commit}}" -tags netgo,usergo,sqlite_omit_load_extension .
    - run: sha256sum ./wiregarden > SHA256SUMS

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset - binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./wiregarden
        asset_name: wiregarden_linux_amd64
        asset_content_type: application/octet-stream
    - name: Upload install script
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./install.bash
        asset_name: install.bash
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SHA256SUMS
        asset_name: SHA256SUMS
        asset_content_type: text/plain
